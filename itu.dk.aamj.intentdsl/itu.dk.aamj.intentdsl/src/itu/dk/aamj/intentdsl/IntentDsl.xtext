// automatically generated by Xtext
grammar itu.dk.aamj.intentdsl.IntentDsl with org.eclipse.xtext.common.Terminals

import "platform:/resource/itu.dk.aamj.model/model/intent.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Intent returns Intent:
	{Intent}
	'Intent'
	name=EString
	'{'
		('type' type=EString)?
		('data' data=EString)?
		('exceptionName' exceptionName=EString)?
		('extras' '{' extras+=Bundle ( "," extras+=Bundle)* '}' )?
		('sucessCallback' sucessCallback=Callback)?
		('permissions' '{' permissions+=Permissions ( "," permissions+=Permissions)* '}' )?
	'}';

Bundle returns Bundle:
	Bundle_Impl | DoubleExtra | IntExtra | CharSequenceExtra | CharExtra | BundleExtra | ParceableExtra | SerializableExtra | FloatExtra | ByteExtra | LongExtra | StringExtra;



EString returns ecore::EString:
	STRING | ID;

Bundle_Impl returns Bundle:
	'Bundle'
	name=EString
	'{'
		'value' value=EString
	'}';

Callback returns Callback:
	{Callback}
	'Callback'
	name=EString
	'{'
		('data' data=EString)?
	'}';

Permissions returns Permissions:
	{Permissions}
	'Permissions'
	name=EString;

ExplicitIntent returns ExplicitIntent:
	'ExplicitIntent'
	name=EString
	'{'
		('type' type=EString)?
		('data' data=EString)?
		('exceptionName' exceptionName=EString)?
		'component' component=EString
		('extras' '{' extras+=Bundle ( "," extras+=Bundle)* '}' )?
		('sucessCallback' sucessCallback=Callback)?
		('permissions' '{' permissions+=Permissions ( "," permissions+=Permissions)* '}' )?
	'}';

ImplicitIntent returns ImplicitIntent:
	'ImplicitIntent'
	name=EString
	'{'
		('type' type=EString)?
		('data' data=EString)?
		('exceptionName' exceptionName=EString)?
		('category' category=EString)?
		'action' action=EString
		('extras' '{' extras+=Bundle ( "," extras+=Bundle)* '}' )?
		('sucessCallback' sucessCallback=Callback)?
		('permissions' '{' permissions+=Permissions ( "," permissions+=Permissions)* '}' )?
	'}';

DoubleExtra returns DoubleExtra:
	'DoubleExtra'
	name=EString
	'{'
		'value' value=EString
	'}';

IntExtra returns IntExtra:
	'IntExtra'
	name=EString
	'{'
		'value' value=EString
	'}';

CharSequenceExtra returns CharSequenceExtra:
	'CharSequenceExtra'
	name=EString
	'{'
		'value' value=EString
	'}';

CharExtra returns CharExtra:
	'CharExtra'
	name=EString
	'{'
		'value' value=EString
	'}';

BundleExtra returns BundleExtra:
	'BundleExtra'
	name=EString
	'{'
		'value' value=EString
	'}';

ParceableExtra returns ParceableExtra:
	'ParceableExtra'
	name=EString
	'{'
		'value' value=EString
	'}';

SerializableExtra returns SerializableExtra:
	'SerializableExtra'
	name=EString
	'{'
		'value' value=EString
	'}';

FloatExtra returns FloatExtra:
	'FloatExtra'
	name=EString
	'{'
		'value' value=EString
	'}';

ByteExtra returns ByteExtra:
	'ByteExtra'
	name=EString
	'{'
		'value' value=EString
	'}';

LongExtra returns LongExtra:
	'LongExtra'
	name=EString
	'{'
		'value' value=EString
	'}';

StringExtra returns StringExtra:
	'StringExtra'
	name=EString
	'{'
		'value' value=EString
	'}';
