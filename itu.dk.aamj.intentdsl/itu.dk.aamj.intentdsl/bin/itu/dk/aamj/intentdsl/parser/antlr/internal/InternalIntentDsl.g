/*
* generated by Xtext
*/
grammar InternalIntentDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package itu.dk.aamj.intentdsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package itu.dk.aamj.intentdsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import itu.dk.aamj.intentdsl.services.IntentDslGrammarAccess;

}

@parser::members {

 	private IntentDslGrammarAccess grammarAccess;
 	
    public InternalIntentDslParser(TokenStream input, IntentDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Intent_Impl";	
   	}
   	
   	@Override
   	protected IntentDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleIntent_Impl
entryRuleIntent_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntent_ImplRule()); }
	 iv_ruleIntent_Impl=ruleIntent_Impl 
	 { $current=$iv_ruleIntent_Impl.current; } 
	 EOF 
;

// Rule Intent_Impl
ruleIntent_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntent_ImplAccess().getIntentAction_0(),
            $current);
    }
)	otherlv_1='Intent' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntent_ImplAccess().getIntentKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntent_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntent_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntent_ImplAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIntent_ImplAccess().getTypeKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntent_ImplAccess().getTypeEStringParserRuleCall_4_1_0()); 
	    }
		lv_type_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntent_ImplRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='data' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIntent_ImplAccess().getDataKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntent_ImplAccess().getDataEStringParserRuleCall_5_1_0()); 
	    }
		lv_data_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntent_ImplRule());
	        }
       		set(
       			$current, 
       			"data",
        		lv_data_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='exceptionName' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntent_ImplAccess().getExceptionNameKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntent_ImplAccess().getExceptionNameEStringParserRuleCall_6_1_0()); 
	    }
		lv_exceptionName_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntent_ImplRule());
	        }
       		set(
       			$current, 
       			"exceptionName",
        		lv_exceptionName_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='extras' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getIntent_ImplAccess().getExtrasKeyword_7_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntent_ImplAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntent_ImplAccess().getExtrasBundleParserRuleCall_7_2_0()); 
	    }
		lv_extras_12_0=ruleBundle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntent_ImplRule());
	        }
       		add(
       			$current, 
       			"extras",
        		lv_extras_12_0, 
        		"Bundle");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIntent_ImplAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntent_ImplAccess().getExtrasBundleParserRuleCall_7_3_1_0()); 
	    }
		lv_extras_14_0=ruleBundle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntent_ImplRule());
	        }
       		add(
       			$current, 
       			"extras",
        		lv_extras_14_0, 
        		"Bundle");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntent_ImplAccess().getRightCurlyBracketKeyword_7_4());
    }
)?(	otherlv_16='sucessCallback' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getIntent_ImplAccess().getSucessCallbackKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntent_ImplAccess().getSucessCallbackCallbackParserRuleCall_8_1_0()); 
	    }
		lv_sucessCallback_17_0=ruleCallback		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntent_ImplRule());
	        }
       		set(
       			$current, 
       			"sucessCallback",
        		lv_sucessCallback_17_0, 
        		"Callback");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_18='permissions' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getIntent_ImplAccess().getPermissionsKeyword_9_0());
    }
	otherlv_19='{' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getIntent_ImplAccess().getLeftCurlyBracketKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntent_ImplAccess().getPermissionsPermissionsParserRuleCall_9_2_0()); 
	    }
		lv_permissions_20_0=rulePermissions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntent_ImplRule());
	        }
       		add(
       			$current, 
       			"permissions",
        		lv_permissions_20_0, 
        		"Permissions");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21=',' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getIntent_ImplAccess().getCommaKeyword_9_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntent_ImplAccess().getPermissionsPermissionsParserRuleCall_9_3_1_0()); 
	    }
		lv_permissions_22_0=rulePermissions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntent_ImplRule());
	        }
       		add(
       			$current, 
       			"permissions",
        		lv_permissions_22_0, 
        		"Permissions");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getIntent_ImplAccess().getRightCurlyBracketKeyword_9_4());
    }
)?	otherlv_24='}' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getIntent_ImplAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleBundle
entryRuleBundle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBundleRule()); }
	 iv_ruleBundle=ruleBundle 
	 { $current=$iv_ruleBundle.current; } 
	 EOF 
;

// Rule Bundle
ruleBundle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBundleAccess().getBundle_ImplParserRuleCall_0()); 
    }
    this_Bundle_Impl_0=ruleBundle_Impl
    { 
        $current = $this_Bundle_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBundleAccess().getDoubleExtraParserRuleCall_1()); 
    }
    this_DoubleExtra_1=ruleDoubleExtra
    { 
        $current = $this_DoubleExtra_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBundleAccess().getIntExtraParserRuleCall_2()); 
    }
    this_IntExtra_2=ruleIntExtra
    { 
        $current = $this_IntExtra_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBundleAccess().getCharSequenceExtraParserRuleCall_3()); 
    }
    this_CharSequenceExtra_3=ruleCharSequenceExtra
    { 
        $current = $this_CharSequenceExtra_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBundleAccess().getCharExtraParserRuleCall_4()); 
    }
    this_CharExtra_4=ruleCharExtra
    { 
        $current = $this_CharExtra_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBundleAccess().getBundleExtraParserRuleCall_5()); 
    }
    this_BundleExtra_5=ruleBundleExtra
    { 
        $current = $this_BundleExtra_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBundleAccess().getParceableExtraParserRuleCall_6()); 
    }
    this_ParceableExtra_6=ruleParceableExtra
    { 
        $current = $this_ParceableExtra_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBundleAccess().getSerializableExtraParserRuleCall_7()); 
    }
    this_SerializableExtra_7=ruleSerializableExtra
    { 
        $current = $this_SerializableExtra_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBundleAccess().getFloatExtraParserRuleCall_8()); 
    }
    this_FloatExtra_8=ruleFloatExtra
    { 
        $current = $this_FloatExtra_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBundleAccess().getByteExtraParserRuleCall_9()); 
    }
    this_ByteExtra_9=ruleByteExtra
    { 
        $current = $this_ByteExtra_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBundleAccess().getLongExtraParserRuleCall_10()); 
    }
    this_LongExtra_10=ruleLongExtra
    { 
        $current = $this_LongExtra_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBundleAccess().getStringExtraParserRuleCall_11()); 
    }
    this_StringExtra_11=ruleStringExtra
    { 
        $current = $this_StringExtra_11.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleBundle_Impl
entryRuleBundle_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBundle_ImplRule()); }
	 iv_ruleBundle_Impl=ruleBundle_Impl 
	 { $current=$iv_ruleBundle_Impl.current; } 
	 EOF 
;

// Rule Bundle_Impl
ruleBundle_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Bundle' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBundle_ImplAccess().getBundleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBundle_ImplAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBundle_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBundle_ImplAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBundle_ImplAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBundle_ImplAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBundle_ImplRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBundle_ImplAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleCallback
entryRuleCallback returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCallbackRule()); }
	 iv_ruleCallback=ruleCallback 
	 { $current=$iv_ruleCallback.current; } 
	 EOF 
;

// Rule Callback
ruleCallback returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCallbackAccess().getCallbackAction_0(),
            $current);
    }
)	otherlv_1='Callback' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCallbackAccess().getCallbackKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCallbackAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCallbackRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCallbackAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='data' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCallbackAccess().getDataKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCallbackAccess().getDataEStringParserRuleCall_4_1_0()); 
	    }
		lv_data_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCallbackRule());
	        }
       		set(
       			$current, 
       			"data",
        		lv_data_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCallbackAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRulePermissions
entryRulePermissions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPermissionsRule()); }
	 iv_rulePermissions=rulePermissions 
	 { $current=$iv_rulePermissions.current; } 
	 EOF 
;

// Rule Permissions
rulePermissions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPermissionsAccess().getPermissionsAction_0(),
            $current);
    }
)	otherlv_1='Permissions' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPermissionsAccess().getPermissionsKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPermissionsAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPermissionsRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;









// Entry rule entryRuleDoubleExtra
entryRuleDoubleExtra returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleExtraRule()); }
	 iv_ruleDoubleExtra=ruleDoubleExtra 
	 { $current=$iv_ruleDoubleExtra.current; } 
	 EOF 
;

// Rule DoubleExtra
ruleDoubleExtra returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DoubleExtra' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDoubleExtraAccess().getDoubleExtraKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoubleExtraAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoubleExtraRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDoubleExtraAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDoubleExtraAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoubleExtraAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoubleExtraRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDoubleExtraAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleIntExtra
entryRuleIntExtra returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntExtraRule()); }
	 iv_ruleIntExtra=ruleIntExtra 
	 { $current=$iv_ruleIntExtra.current; } 
	 EOF 
;

// Rule IntExtra
ruleIntExtra returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='IntExtra' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntExtraAccess().getIntExtraKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntExtraAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntExtraRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntExtraAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntExtraAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntExtraAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntExtraRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntExtraAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleCharSequenceExtra
entryRuleCharSequenceExtra returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharSequenceExtraRule()); }
	 iv_ruleCharSequenceExtra=ruleCharSequenceExtra 
	 { $current=$iv_ruleCharSequenceExtra.current; } 
	 EOF 
;

// Rule CharSequenceExtra
ruleCharSequenceExtra returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='CharSequenceExtra' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCharSequenceExtraAccess().getCharSequenceExtraKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCharSequenceExtraAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCharSequenceExtraRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCharSequenceExtraAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCharSequenceExtraAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCharSequenceExtraAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCharSequenceExtraRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCharSequenceExtraAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleCharExtra
entryRuleCharExtra returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharExtraRule()); }
	 iv_ruleCharExtra=ruleCharExtra 
	 { $current=$iv_ruleCharExtra.current; } 
	 EOF 
;

// Rule CharExtra
ruleCharExtra returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='CharExtra' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCharExtraAccess().getCharExtraKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCharExtraAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCharExtraRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCharExtraAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCharExtraAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCharExtraAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCharExtraRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCharExtraAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleBundleExtra
entryRuleBundleExtra returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBundleExtraRule()); }
	 iv_ruleBundleExtra=ruleBundleExtra 
	 { $current=$iv_ruleBundleExtra.current; } 
	 EOF 
;

// Rule BundleExtra
ruleBundleExtra returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BundleExtra' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBundleExtraAccess().getBundleExtraKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBundleExtraAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBundleExtraRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBundleExtraAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBundleExtraAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBundleExtraAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBundleExtraRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBundleExtraAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleParceableExtra
entryRuleParceableExtra returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParceableExtraRule()); }
	 iv_ruleParceableExtra=ruleParceableExtra 
	 { $current=$iv_ruleParceableExtra.current; } 
	 EOF 
;

// Rule ParceableExtra
ruleParceableExtra returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ParceableExtra' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParceableExtraAccess().getParceableExtraKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParceableExtraAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParceableExtraRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParceableExtraAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getParceableExtraAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParceableExtraAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParceableExtraRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getParceableExtraAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSerializableExtra
entryRuleSerializableExtra returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSerializableExtraRule()); }
	 iv_ruleSerializableExtra=ruleSerializableExtra 
	 { $current=$iv_ruleSerializableExtra.current; } 
	 EOF 
;

// Rule SerializableExtra
ruleSerializableExtra returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SerializableExtra' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSerializableExtraAccess().getSerializableExtraKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSerializableExtraAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSerializableExtraRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSerializableExtraAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSerializableExtraAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSerializableExtraAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSerializableExtraRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSerializableExtraAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleFloatExtra
entryRuleFloatExtra returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFloatExtraRule()); }
	 iv_ruleFloatExtra=ruleFloatExtra 
	 { $current=$iv_ruleFloatExtra.current; } 
	 EOF 
;

// Rule FloatExtra
ruleFloatExtra returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='FloatExtra' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFloatExtraAccess().getFloatExtraKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFloatExtraAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFloatExtraRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFloatExtraAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFloatExtraAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFloatExtraAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFloatExtraRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFloatExtraAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleByteExtra
entryRuleByteExtra returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getByteExtraRule()); }
	 iv_ruleByteExtra=ruleByteExtra 
	 { $current=$iv_ruleByteExtra.current; } 
	 EOF 
;

// Rule ByteExtra
ruleByteExtra returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ByteExtra' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getByteExtraAccess().getByteExtraKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getByteExtraAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getByteExtraRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getByteExtraAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getByteExtraAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getByteExtraAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getByteExtraRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getByteExtraAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleLongExtra
entryRuleLongExtra returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLongExtraRule()); }
	 iv_ruleLongExtra=ruleLongExtra 
	 { $current=$iv_ruleLongExtra.current; } 
	 EOF 
;

// Rule LongExtra
ruleLongExtra returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='LongExtra' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLongExtraAccess().getLongExtraKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLongExtraAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLongExtraRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLongExtraAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLongExtraAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLongExtraAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLongExtraRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLongExtraAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleStringExtra
entryRuleStringExtra returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringExtraRule()); }
	 iv_ruleStringExtra=ruleStringExtra 
	 { $current=$iv_ruleStringExtra.current; } 
	 EOF 
;

// Rule StringExtra
ruleStringExtra returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='StringExtra' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringExtraAccess().getStringExtraKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringExtraAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringExtraRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStringExtraAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStringExtraAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringExtraAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringExtraRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStringExtraAccess().getRightCurlyBracketKeyword_5());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


